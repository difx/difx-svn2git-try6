#!/usr/bin/python
import os,sys

difxroot = os.environ.get('DIFXROOT')
bindir = difxroot + '/bin/'
libdir = difxroot + '/lib/'
pkgdir = difxroot + '/lib/pkg-config/'
incdir = difxroot + '/include/'
ipproot = os.environ.get('IPPROOT')
mpicxx = os.environ.get('MPICXX')
pgplotdir = os.environ.get('PGPLOTDIR')

print "You must have already source'd setup.difx.bash!"

if os.path.exists(difxroot):
    print difxroot + " already exists"
    if os.path.exists(bindir):
        print bindir + " already exists"
    else:
        os.mkdir(bindir)
    if os.path.exists(libdir):
        print libdir + " already exists"
    else:
        os.mkdir(libdir)
    if os.path.exists(pkgdir):
        print pkgdir + " already exists"
    else:
        os.mkdir(pkgdir)
    if os.path.exists(incdir):
        print incdir + " already exists"
    else:
        os.mkdir(incdir)
else:
    os.mkdir(difxroot)
    os.mkdir(bindir)
    os.mkdir(libdir)
    os.mkdir(pkgdir)
    os.mkdir(incdir)

print "Making CALC"
os.chdir('applications/calc/calc9/')
#Set CALCDB and append this call to the setup.difx.bash file
os.putenv('CALCDB', os.getcwd())
os.system("echo \"export $CALCDB=" + os.getcwd() + "\" >> setup.difx.bash") 
#Make calc
os.system('make')
os.system('ar -r libcorcalc.a *.o')
os.system("mv libcorcalc.a " + libdir)
os.chdir('../../../')
os.system("cp -f applications/calc/calc9/*.h " + incdir)

print "Making vex"
os.chdir("libraries/vex/vexlib")
os.system("make")
os.system("mv -f libvex.so " + libdir)
os.system("mv -f libvex.a " + libdir)
os.chdir("../vexperl")
os.system("perl Makefile.PL PREFIX=" + libdir)
os.system("make")
os.system("make install")
print "Make sure to set PERL5LIB appropriately - will be a subdirectory of " + libdir
os.chdir("../../../")

print "Making rpfits"
is32bit = False
environ_vars = os.environ.keys()
for envvar in environ_vars:
    if envvar == 'DIFX32':
        is32bit = True
if is32bit:
    os.chdir("libraries/rpfits/linux/")
else:
    os.chdir("libraries/rpfits/linux64/")
os.system("make")
os.system("mv -f librpfits.a " + libdir)
os.chdir("../../../")
os.system("cp -f libraries/rpfits/code/RPFITS.h " + incdir)

print "Making vlba_utils"
os.chdir("libraries/vlba_utils/")
os.system("make")
os.system("mv -f libvlba_utils.a " + libdir) 
os.system("mv -f test_vlba_stream " + bindir)
os.system("cp -f vlba_stream.h " + incdir)
os.chdir("../../")

print "Making mpifxcorr"
os.chdir("mpifxcorr/")
os.system("aclocal")
os.system("automake")
os.system("./configure CXX=" + mpicxx + " --prefix=" + difxroot)
os.system("make")
os.system("make install")
os.system("cp -f src/*.h " + incdir)
os.chdir("../")

print "Copying some utilities"
os.system("cp -f utilities/vex2difx/vex2config.pl " + bindir)
os.system("cp -f utilities/vex2difx/vex2model_updated.pl " + bindir)
os.chdir("applications/calc/")
os.system("make")
os.system("mv gencalc_delays " + bindir)
os.chdir("../../")

print "Making the difx_monitor"
os.chdir("applications/difx_monitor/")
os.system("make")
os.system("mv -f difx_monitor " + bindir)
os.chdir("../../")

print "Done!"
