/*
 * DiFXSimGUI.java
 *
 * Created on April 1, 2008, 4:11 PM
 */

package edu.nrao.difx.difxsim;

import java.io.*;
import java.net.*;

import javax.swing.*;

import java.util.regex.*; 

import edu.nrao.difx.simcontroller.*;

/**
 *
 * @author  mguerra
 */
public class DiFXSimGUI extends javax.swing.JFrame {

   
    private static SimController theController;
    private String mFileToOpen;
    
    /** Creates new form DiFXSimGUI */
    public DiFXSimGUI() 
    {
        // init controller and view
        theController = new SimController();
        initComponents();
        //ovalLED.start();
    }

    public String ReadXmlFile(String fname)
    {
        StringBuffer buffer = new StringBuffer();
        
        try
        {
            FileInputStream   fis = new FileInputStream(fname);
            InputStreamReader isr = new InputStreamReader(fis, "UTF8");
            
            Reader in = new BufferedReader(isr);
            int ch;
            while ((ch=in.read()) > -1)
            {
                buffer.append(((char) ch));
            }
            
            in.close();
        }
        catch (IOException ex)
        {
            java.util.logging.Logger.getLogger("global").log(java.util.logging.Level.SEVERE, null, ex); //NOI18N
        }   

        // return buffer
        return buffer.toString();                                                
    }
    
    public void WriteToSocket(String outString)
    {
        try
        {
            MulticastSocket sock = new MulticastSocket();
            // If sending, no need to join multicast group.
            // message.joinGroup();
        
            byte[] buffer = outString.getBytes();            
            DatagramPacket packet = new DatagramPacket(buffer, buffer.length,
                                                       InetAddress.getByName(DiFXSystemConfig.IpAddress),
                                                       DiFXSystemConfig.Port);
            sock.setTimeToLive(5);
            sock.send(packet);
            sock.close();
        }
        catch (IOException ex)
        {
            java.util.logging.Logger.getLogger("global").log(java.util.logging.Level.SEVERE, null, ex); //NOI18N
        }   

    }
    
    public void ReadFromSocket()
    {
        // what is the pupose of this method?
        
        // messages are read by SimController.ThreadMgr
        
    }

    private void WriteStringToFile(String outString)
    {
        try
        {
            // create a file chooser
            final JFileChooser fc = new JFileChooser();

            // in response to a button click:
            int returnVal = fc.showSaveDialog(this);

            if (returnVal == JFileChooser.APPROVE_OPTION) 
            {
                File destFile = fc.getSelectedFile();
                byte[] outBytes = outString.getBytes();
                FileOutputStream fos = new FileOutputStream(destFile);
                fos.write(outBytes);
                fos.close();
            }
        }
        catch (IOException ex)
        {
            java.util.logging.Logger.getLogger("global").log(java.util.logging.Level.SEVERE, null, ex); //NOI18N
        }   

    };
    
    public void UpdateRxTextArea(String msgToPrint)
    {
       //rxXMLTextArea.setText("");
       rxXMLTextArea.insert(msgToPrint.toString(), 0);
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xMLPanel = new javax.swing.JPanel();
        xmlScrollPane = new javax.swing.JScrollPane();
        fileTextArea = new javax.swing.JTextArea();
        rxXmlScrollPane = new javax.swing.JScrollPane();
        rxXMLTextArea = new javax.swing.JTextArea();
        openButton = new javax.swing.JButton();
        parseButton = new javax.swing.JButton();
        sendButton = new javax.swing.JButton();
        multiSendButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        closeMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        saveMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        parseMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DiFX Simulator");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        xMLPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("XML Generator"));

        fileTextArea.setColumns(20);
        fileTextArea.setLineWrap(true);
        fileTextArea.setRows(5);
        fileTextArea.setTabSize(3);
        xmlScrollPane.setViewportView(fileTextArea);

        rxXMLTextArea.setColumns(20);
        rxXMLTextArea.setLineWrap(true);
        rxXMLTextArea.setRows(5);
        rxXMLTextArea.setTabSize(3);
        rxXmlScrollPane.setViewportView(rxXMLTextArea);

        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        parseButton.setText("Parse");
        parseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseButtonActionPerformed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        multiSendButton.setText("MultiSend");
        multiSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiSendButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout xMLPanelLayout = new javax.swing.GroupLayout(xMLPanel);
        xMLPanel.setLayout(xMLPanelLayout);
        xMLPanelLayout.setHorizontalGroup(
            xMLPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xMLPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(xMLPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(xMLPanelLayout.createSequentialGroup()
                        .addComponent(openButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(parseButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multiSendButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(xmlScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(xMLPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rxXmlScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeButton))
                .addContainerGap())
        );
        xMLPanelLayout.setVerticalGroup(
            xMLPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, xMLPanelLayout.createSequentialGroup()
                .addGroup(xMLPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(xmlScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                    .addComponent(rxXmlScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xMLPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(closeButton)
                    .addComponent(openButton)
                    .addComponent(parseButton)
                    .addComponent(sendButton)
                    .addComponent(multiSendButton)
                    .addComponent(saveButton)))
        );

        fileMenu.setText("File");

        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);
        fileMenu.add(jSeparator1);

        closeMenuItem.setText("Close");
        fileMenu.add(closeMenuItem);
        fileMenu.add(jSeparator2);

        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        parseMenuItem.setText("Parse");
        editMenu.add(parseMenuItem);

        menuBar.add(editMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(xMLPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(xMLPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed

        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.setCurrentDirectory(new File(DiFXSystemConfig.SimHome));
        fc.setApproveButtonText("Select File");
                
        // declare the file object
        File selectedFile = null;
        
        // In response to a button click:
        int returnVal = fc.showOpenDialog(this);
       
        // Get project and jobs
        if ( returnVal == JFileChooser.APPROVE_OPTION )
        {
            selectedFile = fc.getSelectedFile();

            String fName = selectedFile.getPath();        
            
            String patternStr = "/"; 
            String replacementStr = "//"; 

            // Compile regular expression 
            Pattern pattern = Pattern.compile(patternStr); 

            // Replace all occurrences of pattern in input 
            Matcher matcher = pattern.matcher(fName); 
            fName = matcher.replaceAll(replacementStr); 
            mFileToOpen = fName;

            fileTextArea.setText("");
            fileTextArea.insert(ReadXmlFile(fName), 0);
        }
        
}//GEN-LAST:event_openButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
       
        String strToWrite = fileTextArea.getText();
        WriteStringToFile(strToWrite);
}//GEN-LAST:event_saveButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        
        try 
        {
            String strToSend = fileTextArea.getText();
            for (int i = 0; i < 1; i++)
            {
               System.out.printf("DiFX SIM - write(%d) to socket. \n", i);
               WriteToSocket(strToSend.toString());
               Thread.sleep(0);
            }
        }
        catch ( InterruptedException exception )
        {
           System.out.printf("Exeception caught - done. \n");
           exception.printStackTrace();
        }
}//GEN-LAST:event_sendButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed

        // Stop threads and exit application
        theController.StopController();
        System.exit(0);
        
}//GEN-LAST:event_closeButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        // Stop threads
        theController.StopController();
        
    }//GEN-LAST:event_formWindowClosing

    private void parseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parseButtonActionPerformed

      try 
      {
         FileReader fr = new FileReader(mFileToOpen);
         BufferedReader br = new BufferedReader(fr);

         String s;
         while( (s = br.readLine() ) != null )
         {
            if ( s.contains("DELAY FILENAME:"    ) ||
                 s.contains("UVW FILENAME:"      ) ||
                 s.contains("CORE CONF FILENAME:") )
            {
               s = s.substring(s.indexOf(":")+1);
               String trimmed = s.trim();
               //String b = s.replaceAll( "\\s+", "" );
               //String c = s.replaceAll("\\t", "");
               System.out.println(s);
            }            
         }
         
         fr.close();
      }
      catch(Exception e) 
      {
         System.out.println("Exception: " + e);
      }
    
    }//GEN-LAST:event_parseButtonActionPerformed

    private void multiSendButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_multiSendButtonActionPerformed
    {//GEN-HEADEREND:event_multiSendButtonActionPerformed
      
        try
        {
            String strToSend = fileTextArea.getText();
            for (int i = 0; i < DiFXSystemConfig.MaxSends; i++)
            {
               System.out.printf("DiFX SIM - write(%d) to socket. \n", i);
               WriteToSocket(strToSend.toString());
               Thread.sleep(DiFXSystemConfig.MaxSpeed);
            }
        }
        catch ( InterruptedException exception )
        {
           System.out.printf("Exeception caught - done. \n");
           exception.printStackTrace();
        }

    }//GEN-LAST:event_multiSendButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {        
        java.awt.EventQueue.invokeLater(new Runnable() {
         @Override
            public void run() {
                
                // display the UI
                DiFXSimGUI simGUI = new DiFXSimGUI();                 
                simGUI.setVisible(true);

                // no data model so need for a listener, not data model
                
                // Kick start the threads....start controller
                try
                {
                    // initialize the controller with view, setup call back, and 
                    // start the controller
                    theController.Initialize(simGUI);
                    theController.StartController();
                }
                catch (InterruptedException ex)
                {
                    // threads failed so log an error
                    java.util.logging.Logger.getLogger("global").log(java.util.logging.Level.SEVERE, null, ex);            
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextArea fileTextArea;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton multiSendButton;
    private javax.swing.JButton openButton;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JButton parseButton;
    private javax.swing.JMenuItem parseMenuItem;
    private javax.swing.JTextArea rxXMLTextArea;
    private javax.swing.JScrollPane rxXmlScrollPane;
    private javax.swing.JButton saveButton;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton sendButton;
    private javax.swing.JPanel xMLPanel;
    private javax.swing.JScrollPane xmlScrollPane;
    // End of variables declaration//GEN-END:variables
    
}
