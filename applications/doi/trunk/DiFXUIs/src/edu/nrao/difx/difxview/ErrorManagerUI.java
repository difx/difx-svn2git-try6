/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ErrorManagerUI.java
 *
 * Created on Oct 6, 2009, 10:10:41 AM
 */
package edu.nrao.difx.difxview;

import edu.nrao.difx.difxcontroller.DiFXController;
import edu.nrao.difx.difxdatamodel.DOISystemConfig;
import edu.nrao.difx.difxdatamodel.DiFXDataModel;
import edu.nrao.difx.difxdatamodel.Job;
import edu.nrao.difx.difxdatamodel.MessageListener;
import edu.nrao.difx.xmllib.difxmessage.DifxMessage;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.SwingUtilities;

/**
 *
 * @author mguerra
 */
public class ErrorManagerUI extends javax.swing.JFrame
{

   private static final long serialVersionUID = 4;
   private static ErrorManagerUI mInstance = null;

   // Allow only one data model and controller instance
   private static DiFXDataModel  mDataModel  = null;
   private static DiFXController mController = null;

   private boolean mUpdate = true;

   // Listen for data model updates
   private MessageListener mListener = null;

   /** Creates new form ErrorManagerUI */
   private ErrorManagerUI()
   {
      initComponents();
   }

   public ErrorManagerUI(DiFXDataModel theModel)
   {
      // initialize GUI controls and data model
      initComponents();

      mDataModel   = theModel;
      mController  = null;

   }

  public ErrorManagerUI(DiFXDataModel theModel, DiFXController theController)
   {
      // initialize GUI controls and data model
      initComponents();

      mDataModel   = theModel;
      mController  = theController;

   }

   public static ErrorManagerUI instance(DiFXDataModel theModel, DiFXController theController)
   {
      if (mInstance == null)
      {
         mInstance = new ErrorManagerUI(theModel, theController);
         mInstance.attachListenerCallback();
      }

      return mInstance;
   }

   public void attachListenerCallback()
   {
      // check dataModel and hand it an implementation of update()...
      if (mDataModel != null)
      {
         this.setTitle(this.getTitle() + " " + DOISystemConfig.DOIVersion);
         System.out.println("***************** Error Manager attach listener.");

         // create listener implementation of update()...
         mListener = new MessageListener()
         {
            @Override
            public void update()
            {
               // Get handle to GUI and UpdateGUI()
               updateView();
               //ServiceDataModel();
            }
         };

         // hand DataModel a call back listener
         mDataModel.attachListener(mListener);

      }
      else
      {
         System.out.println("***************** Error Manager listener not attached .\n");
      }
   }

   public void detachListener()
   {
      // remove message listener
      if (mDataModel != null)
      {
         System.out.printf("***************** Error Manager detach listener. \n");
         mDataModel.detachListener(mListener);
      }
      else
      {
         System.out.println("***************** Error Manager listener not detached. \n");
      }

   }

   private void serviceDataModel(DifxMessage difxMessage)
   {
      // pass the message thru to the data model
      if (mDataModel != null)
      {
         mDataModel.serviceDataModel(difxMessage);
      }
   }

   private void updateView()
   {
      // Add code to update the view
      if (mDataModel != null)
      {
         if (mUpdate == true)
         {
               // update alerts text area
               ArrayList<String> errors = mDataModel.getErrors();
               Iterator it = errors.iterator();
               while (it.hasNext() == true)
               {
                   String element = (String) it.next();
                   errorTextArea.append( element );
                   element = null;
               }

               mDataModel.clearErrors();
               scrollPaneToBottom();

               // cleanup

         } // -- if (mUpdate == true)
      }
      else // -- lost the datamodel
      {
         System.out.printf("***************** Error Manager data model not defined. \n");
      }
   }

   private void scrollPaneToBottom() {

   SwingUtilities.invokeLater(new Runnable() {
      @Override
      public void run()
      {
         errorScrollPane.getVerticalScrollBar().setValue(errorScrollPane.getVerticalScrollBar().getMaximum());
      }

      });

   }


   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      errorPanel = new javax.swing.JPanel();
      errorScrollPane = new javax.swing.JScrollPane();
      errorTextArea = new javax.swing.JTextArea();
      bottomButtonPanel = new javax.swing.JPanel();
      closeButton = new javax.swing.JButton();
      completeButton = new javax.swing.JButton();
      failButton = new javax.swing.JButton();
      readyButton = new javax.swing.JButton();
      unknownButton = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("Error Manager");

      errorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

      errorTextArea.setColumns(20);
      errorTextArea.setRows(5);
      errorTextArea.setTabSize(3);
      errorScrollPane.setViewportView(errorTextArea);

      javax.swing.GroupLayout errorPanelLayout = new javax.swing.GroupLayout(errorPanel);
      errorPanel.setLayout(errorPanelLayout);
      errorPanelLayout.setHorizontalGroup(
         errorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(errorScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
      );
      errorPanelLayout.setVerticalGroup(
         errorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(errorScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
      );

      bottomButtonPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

      closeButton.setText("Close");
      closeButton.setMaximumSize(new java.awt.Dimension(39, 19));
      closeButton.setMinimumSize(new java.awt.Dimension(39, 19));

      completeButton.setText("Complete");
      completeButton.setMaximumSize(new java.awt.Dimension(39, 19));
      completeButton.setMinimumSize(new java.awt.Dimension(39, 19));
      completeButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            completeButtonActionPerformed(evt);
         }
      });

      failButton.setText("Fail");
      failButton.setMaximumSize(new java.awt.Dimension(39, 19));
      failButton.setMinimumSize(new java.awt.Dimension(39, 19));
      failButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            failButtonActionPerformed(evt);
         }
      });

      readyButton.setText("Ready");
      readyButton.setMaximumSize(new java.awt.Dimension(39, 19));
      readyButton.setMinimumSize(new java.awt.Dimension(39, 19));
      readyButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            readyButtonActionPerformed(evt);
         }
      });

      unknownButton.setText("Unknown");
      unknownButton.setMaximumSize(new java.awt.Dimension(39, 19));
      unknownButton.setMinimumSize(new java.awt.Dimension(39, 19));
      unknownButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            unknownButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout bottomButtonPanelLayout = new javax.swing.GroupLayout(bottomButtonPanel);
      bottomButtonPanel.setLayout(bottomButtonPanelLayout);
      bottomButtonPanelLayout.setHorizontalGroup(
         bottomButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomButtonPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(completeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(failButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(readyButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(unknownButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
            .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      );
      bottomButtonPanelLayout.setVerticalGroup(
         bottomButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(bottomButtonPanelLayout.createSequentialGroup()
            .addGroup(bottomButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(completeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(failButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(readyButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(unknownButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(bottomButtonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addComponent(errorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(errorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bottomButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void completeButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_completeButtonActionPerformed
   {//GEN-HEADEREND:event_completeButtonActionPerformed
      // TODO add your handling code here:
      String jobName = "";
      String path    = "";
      Job job = mDataModel.getJob(jobName, path);

   }//GEN-LAST:event_completeButtonActionPerformed

   private void failButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_failButtonActionPerformed
   {//GEN-HEADEREND:event_failButtonActionPerformed
      // TODO add your handling code here:
      String jobName = "";
      String path    = "";
      Job job = mDataModel.getJob(jobName, path);

   }//GEN-LAST:event_failButtonActionPerformed

   private void readyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_readyButtonActionPerformed
   {//GEN-HEADEREND:event_readyButtonActionPerformed
      // TODO add your handling code here:
      String jobName = "";
      String path    = "";
      Job job = mDataModel.getJob(jobName, path);

   }//GEN-LAST:event_readyButtonActionPerformed

   private void unknownButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_unknownButtonActionPerformed
   {//GEN-HEADEREND:event_unknownButtonActionPerformed
      // TODO add your handling code here:
      String jobName = "";
      String path    = "";
      Job job = mDataModel.getJob(jobName, path);

   }//GEN-LAST:event_unknownButtonActionPerformed

   /**
    * @param args the command line arguments
    */
   public static void main(String args[])
   {
      java.awt.EventQueue.invokeLater(new Runnable()
      {

         public void run()
         {
            new ErrorManagerUI().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JPanel bottomButtonPanel;
   private javax.swing.JButton closeButton;
   private javax.swing.JButton completeButton;
   private javax.swing.JPanel errorPanel;
   private javax.swing.JScrollPane errorScrollPane;
   private javax.swing.JTextArea errorTextArea;
   private javax.swing.JButton failButton;
   private javax.swing.JButton readyButton;
   private javax.swing.JButton unknownButton;
   // End of variables declaration//GEN-END:variables
}
